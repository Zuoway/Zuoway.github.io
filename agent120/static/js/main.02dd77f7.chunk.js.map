{"version":3,"sources":["index.js"],"names":["Square","props","className","selected","onClick","value","Board","i","j","this","x","y","key","squares","rows","cols","push","renderSquare","buildBoard","React","Component","Game","state","prevSquares","initGame","canRevert","xIsNext","selectedSquare","current","map","arr","slice","calculateWinner","handleInitialSelect","clearDots","setState","prev","getValidMoves","prevState","alert","a","b","stack","seen","Set","length","cur","pop","curStr","has","add","new_i","new_j","status","winner","handleClick","revert","Array","fill","forEach","element","xWins","oWins","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02dd77f7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className={`square ${props.selected ? 'blink' : ''}`}\n            onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i, j) {\n        return (\n            <Square\n                selected={(this.props.selected.x === i)\n                    && (this.props.selected.y === j) ? true : false}\n                key={i + ' ' + j}\n                value={this.props.squares[i][j]}\n                onClick={() => this.props.onClick(i, j)}\n            />);\n    }\n\n    buildBoard() {\n        let rows = [];\n        for (let i = 0; i < 16; i++) {\n            let cols = [];\n            for (let j = 0; j < 16; j++) {\n                cols.push(this.renderSquare(i, j));\n            }\n            rows.push(<div className='board-row' key={i}>{cols}</div>);\n        }\n        return rows;\n    }\n\n    render() {\n        return (\n            <div>{this.buildBoard()}</div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prevSquares: null,\n            squares: initGame(),\n            canRevert: false,\n            xIsNext: true,\n            selectedSquare: { x: null, y: null }\n        }\n    }\n\n    handleClick(i, j) {\n        var current = this.state.squares.map((arr) => arr.slice());\n        /*Check winner to return early*/\n        if (calculateWinner(current)) {\n            return;\n        }\n        if (this.state.selectedSquare.x !== null) {/*Pawn selected, handle landing step*/\n            if (current[i][j] === '·') {\n                //clear valid move indicators\n                this.clearDots(current);\n                current[this.state.selectedSquare.x][this.state.selectedSquare.y] = null;\n                current[i][j] = this.state.xIsNext ? 'X' : 'O';\n                this.setState((prev) => ({\n                    squares: current,\n                    xIsNext: !prev.xIsNext,\n                    canRevert: true,\n                    selectedSquare: { x: null, y: null }\n                }));\n            } else if (current[i][j] === current[this.state.selectedSquare.x][this.state.selectedSquare.y]) {\n                this.clearDots(current);\n                this.handleInitialSelect(i, j, current);\n            }\n            return;\n        } else {/*Pawn not selected, handle selecting step*/\n            this.handleInitialSelect(i, j, current);\n        }\n    }\n\n    clearDots(current) {\n        for (let i in current) {\n            for (let j in current[i]) {\n                if (current[i][j] === '·') {\n                    current[i][j] = null;\n                }\n            }\n        }\n    }\n\n    handleInitialSelect(i, j, current) {\n        if ((this.state.xIsNext && current[i][j] === 'X')\n            || (!this.state.xIsNext && current[i][j] === 'O')) {\n            this.setState({\n                selectedSquare: { x: i, y: j },\n                canRevert: false\n            }, () => this.getValidMoves(i, j, current));\n        }\n        return;\n    }\n\n    revert() {\n        if (!this.state.canRevert) {\n            alert('Unable to revert');\n            return;\n        }\n        this.setState((prevState) => ({\n            squares: prevState.prevSquares,\n            xIsNext: !prevState.xIsNext,\n            canRevert: false\n        }));\n    }\n\n    getValidMoves(i, j, current) {\n        let prevState = current.map((arr) => arr.slice());\n        //add single move\n        for (let a of [-1, 0, 1]) {\n            for (let b of [-1, 0, 1]) {\n                if (i + a >= 0 && j + b >= 0 && i + a < 16 && j + b < 16 &&\n                    !(a === b && a === 0) && !current[i + a][j + b]) {\n                    current[i + a][j + b] = '·';\n                }\n            }\n        }\n        //add jumps\n        let stack = [[i, j]];\n        let seen = new Set();\n        while (stack.length) {\n            let cur = stack.pop();\n            let curStr = cur[0] + ' ' + cur[1];\n            if (seen.has(curStr)) {\n                continue;\n            }\n            seen.add(cur[0] + ' ' + cur[1]);\n            //look around 2 squares away for jump\n            for (let a of [-1, 0, 1]) {\n                for (let b of [-1, 0, 1]) {\n                    if (cur[0] + a >= 0 && cur[1] + b >= 0 && cur[0] + a < 16 && cur[1] + b < 16 &&\n                        !(a === b && a === 0) && (current[cur[0] + a][cur[1] + b] === 'X'\n                            || current[cur[0] + a][cur[1] + b] === 'O')) {\n                        let new_i = cur[0] + 2 * a;\n                        let new_j = cur[1] + 2 * b;\n                        if (new_i >= 0 && new_j >= 0 && new_i < 16 && new_j < 16 &&\n                            !seen.has(new_i + ' ' + new_j) && !current[new_i][new_j]) {\n                            current[new_i][new_j] = '·';\n                            stack.push([new_i, new_j]);\n                        }\n                    }\n                }\n            }\n        }\n        this.setState({\n            prevSquares: prevState,\n            squares: current\n        });\n    }\n\n    render() {\n        const current = this.state.squares;\n        const winner = calculateWinner(current);\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className='game'>\n                <div className='game-board'>\n                    <Board\n                        selected={this.state.selectedSquare}\n                        squares={current}\n                        onClick={(i, j) => this.handleClick(i, j)}\n                    />\n                </div>\n                <div className='game-info'>\n                    <div>{status}</div>\n                    <button onClick={() => this.revert()}>Revert!</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction initGame() {\n    let squares = Array(16).fill().map(() => Array(16).fill(null));\n    let pawnSet = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4],\n    [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [2, 0], [2, 1],\n    [2, 2], [2, 3], [3, 0], [3, 1], [3, 2], [4, 0], [4, 1]];\n    pawnSet.forEach((element) => {\n        squares[element[0]][element[1]] = 'O';\n        squares[15 - element[0]][15 - element[1]] = 'X';\n    });\n    return squares;\n}\n\nfunction calculateWinner(squares) {\n    let checkZone = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4],\n    [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [2, 0], [2, 1],\n    [2, 2], [2, 3], [3, 0], [3, 1], [3, 2], [4, 0], [4, 1]];\n    let xWins = true;\n    let oWins = true;\n    checkZone.forEach((element) => {\n        if (squares[element[0]][element[1]] !== 'X') {\n            xWins = false;\n        }\n        if (squares[15 - element[0]][15 - element[1]] !== 'O') {\n            oWins = false;\n        }\n    });\n    if (xWins) {\n        return 'X';\n    } else if (oWins) {\n        return 'O';\n    } else {\n        return;\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);"],"sourceRoot":""}